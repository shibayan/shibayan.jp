trigger:
- master

variables:
  npm_config_cache: $(Pipeline.Workspace)/.npm

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UseNode@1
      inputs:
        version: '12.x'
      displayName: 'Install Node.js 12.x'

    - task: Cache@2
      inputs:
        key: 'npm | "$(Agent.OS)" | package-lock.json'
        restoreKeys: |
           npm | "$(Agent.OS)"
           npm
        path: $(npm_config_cache)
      displayName: Cache npm

    - script: |
        npm ci
        npm run build -- --dest dist
      displayName: 'npm ci and build'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: 'dist'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: 'dist.zip'
      displayName: 'Archive artifact'

    - publish: dist.zip
      artifact: site
      displayName: 'Publish artifact'

- stage: Deploy
  dependsOn:
  - Build
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - deployment: Deploy
    environment: production
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'Visual Studio Enterprise'
              appType: 'webApp'
              appName: 'shibayan'
              package: '$(Pipeline.Workspace)/site/*.zip'
              deploymentMethod: 'runFromPackage'
            displayName: 'Deploy to Web App'